-- Â© 2011 David Given.
-- Stellation 3 is licensed under the MIT open source license. See the COPYING
-- file in this distribution for the full text.

include "tools/c.pm"
include "tools/bin2c.pm"

CXXCOMPILER = "g++-4.5"
--CXXCOMPILER = "clang++"

CEXTRAFLAGS = {
	PARENT,
	"-O0"
}

CLIBRARIES = {
	"zmq"
}

property_data = simple {
	command = "./pm -f %in[1]% %in[2]% %out%",
	outputs = {
		"%U%/tokens",
		"%U%/property-tables.h",
		"%U%/property-accessors-h.h",
		"%U%/proxy-table.h"
	},
	
	file "tools/make-properties-table.pm",
	file "src/properties.txt"
}
		
make_gperf_hash = simple {
	command = "gperf -m100 -G -C -n -E -L ANSI-C -W propertyNameTable -H propertyHash -N propertyLookup %in% > %out%",
	outputs = {"%U%/hash.h"},
	
	ith {
		i = 1,
		property_data
	}
}

hash_data = simple {
	command = "%in[1]% < %in[2]% > %out%",
	outputs = {"%U%/hash-enum.h"},
	
	cxxprogram {
		cxxfile 
		{
			"tools/make-hash-enum.cc",
			dynamicheaders = make_gperf_hash
		}
	},
	
	ith {
		i = 1,
		property_data,
	}
}

statics_data = simple {
	command = "./pm -f %in[1]% %in[2]% %out%",
	outputs = {
		"%U%/statics-tables.h",
	},
	
	file "tools/make-statics.pm",
	file "src/statics.txt"
}

mycxxfile = cxxfile {
	class = "mycxxfile",
	dynamicheaders = {
		property_data,
		hash_data
	}
}

datafile = mycxxfile {
	class = "datafile",
	
    bin2cxx {
        symbol = "%SYMBOL%",
        file "%FILE%"
    }
}
	
server_exe = cxxprogram {
	CINCLUDES = {
		PARENT,
		"src/server",
		"src/server/database",
		"src/server/model",
		"src/server/io",
		"src/server/engine"
	},
	
	mycxxfile "src/server/main.cc",
	mycxxfile "src/server/mainloop.cc",
	datafile { SYMBOL="help", FILE="src/server/help.txt" },
	mycxxfile {
		"src/server/properties.cc",
		dynamicheaders = {property_data, hash_data, make_gperf_hash}
	},
	mycxxfile {
		"src/server/statics.cc",
		dynamicheaders = {hash_data, statics_data}
	},
	mycxxfile "src/server/utils.cc",
	mycxxfile "src/server/worldcreation.cc",
	mycxxfile "src/server/database/Datum.cc",
	mycxxfile "src/server/database/Database.cc",
	mycxxfile "src/server/io/readerwriter.cc",
	mycxxfile "src/server/io/fileio.cc",
	mycxxfile "src/server/io/Transport.cc",
	mycxxfile "src/server/engine/auth.cc",
	mycxxfile "src/server/engine/engine.cc",
	mycxxfile "src/server/model/SObject.cc",
	mycxxfile "src/server/model/SUniverse.cc",
	mycxxfile "src/server/model/SPlayer.cc",
	mycxxfile "src/server/model/SGalaxy.cc",
	mycxxfile "src/server/model/SStar.cc",
	mycxxfile "src/server/model/SFleet.cc",
	mycxxfile "src/server/model/SUnit.cc",
	mycxxfile "src/server/model/SShip.cc",
	mycxxfile "src/server/model/SJumpship.cc",
	
	install = pm.install("bin/server")
}

default = server_exe